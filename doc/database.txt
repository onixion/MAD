Datenbank-Organisation (nach Alin)
----------------------------------

GUIDTable -> Speicherung der GUIDs

	ID_NODE:INTEGER
	GUID_NODE:TEXT

NodeTable -> Speicherung der Netzwerkknoten

	ID_NODE:INTEGER
	NAME:TEXT 	(Hostname oder anderer Name für das Gerät)
	IP:TEXT		(IP-Adresse)
	MAC:TEXT	(MAC-Adresse)
	MEMO:TEXT	(Feld für den Administrator)

JobTable -> Speicherung der Job-Ergebnisse

	ID_NODE:INTEGER
	ID_JOB:INTEGER
	JOBNAME:INTEGER (Name des Jobs)
	OUTSTATE:INTEGER (Ausgangszustand des Jobs)
	STARTTIME:TEXT	(Zeitstempel für den Beginn der Ausführung)
	STOPTIME:TEXT	(Zeitstempel für das Ende der Ausführung)
	DELAYTIME:TEXT	(Ausführungsdauer des Jobs; in Millisekunden)
	OUTDESC:TEXT	(Hier werden die Werte der OutDescriptoren abgespeichert; getrennt mit ':'!)

JobNameTable -> Speicherung der Namen der Jobs

	JOB_ID:INTEGER
	NAME:TEXT	(Name des Jobs)

SummaryTable -> Speicherung der Zusammenfassungen

	ID_NODE:INTEGER
	STARTTIME:TEXT	(Zeitstempel für den Beginn der Zusammenfassung)
	STOPTIME:TEXT	(Zeitstempel für das Ende der Zusammenfassung)

	SUCCESS:TEXT	(0 bis 100%; OUTSTATES, die erfolgreich waren)
	AVERAGE_DURATION:TEXT (durchschnittliche Ausführungsdauer; in Millisekunden)
	MAX_DURATION:TEXT (maximale Ausführungsdauer; in Millisekunden)
	MIN_DURATION:TEXT (minamele Ausführungsdauer; in Millisekunden)


__________________________________________________________________________________________

Anmerkungen:
------------

Die NodeTable speichert die aktuellsten Geräte (=Nodes). Falls das Gerät eine neue Adresse
vom Anwender zugewießen bekommt oder der ARP-Reader eine neue Adresse auflöst, dann wird
die IP-Adresse in der Datenbank geupdatet. Nachteil an der Sache: wir verlieren die
Information der IP-Adressen, die ein Gerät mal gehabt hat.

Zwei Memofelder sind nicht sinnvoll, wir arbeiten mit SQLITE, also eine sehr einfache Datenbank.
Sie ist eine leichtgewichtige, unkomplizierte und einfach zu implementierende (sowohl auf Linux
als Windows) Datebank. Da sie alles als Text abspeichert, muss das Programm die Kontrolle über
die gespeicherten Werte übernehmen (maximale Länge usw.). In der Datenbank verwenden wir ein Feld
namens 'Memo'. Dieses Feld kann unterteilt werden. Muss das Programm machen, nicht die DB!










	